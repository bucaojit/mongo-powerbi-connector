# Evergreen Project Config

# When a task that used to pass starts to fail
# Go through all versions that may have been skipped to detect
# when the task started failing
stepback: true

# Mark a failure as a system/bootstrap failure (purple box) rather then a task
# failure by default.
# Actual testing tasks are marked with `type: test`
command_type: system

# Protect ourself against rogue test case, or curl gone wild, that runs forever
# 12 minutes is the longest we'll ever run
exec_timeout_secs: 3600 # 12 minutes is the longest we'll ever run

# What to do when evergreen hits the timeout (`post:` tasks are run automatically)
timeout:
  - command: shell.exec
    params:
      script: |
        ls -la

functions:
  "fetch source":
    - command: git.get_project
      params:
        directory: mongo-powerbi-connector

  "generate expansions":
    - command: shell.exec
      params:
        shell: bash
        working_dir: mongo-powerbi-connector
        script: |
          cat <<EOT > expansions.yml
          prepare_shell: |
            set -o errexit
            export PATH="$PATH"
          EOT
    - command: expansions.update
      params:
        file: mongo-powerbi-connector/expansions.yml

  "build connector":
    - command: shell.exec
      params:
        shell: bash
        working_dir: mongo-powerbi-connector
        script: |
          echo 'PLACEHOLDER' > mongodb-powerbi.pqx

  "upload connector":
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: mongo-powerbi-connector/mongodb-powerbi.pqx
        remote_file: mongo-powerbi-connector/artifacts/${version_id}/${build_variant}/mongodb-powerbi.pqx
        bucket: mciuploads
        permissions: public-read
        content_type: application/octet-stream

pre:
  - func: "fetch source"
  - func: "generate expansions"

post: []

tasks:

  - name: build
    commands:
      - func: "build connector"
      - func: "upload connector"

buildvariants:

  - name: windows
    display_name: "Windows"
    run_on: [ windows-64-vs2019-large ]
    tasks:
      - name: build
